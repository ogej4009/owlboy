
#include "RenderBase.hlsli"

struct VTX2DIMGIN
{
	float4 Pos : POSITION;
	float4 Uv : TEXCOORD;
	float4 Color : COLOR;
	float4 Normal : NORMAL;

};

struct VTX2DIMGOUT
{
	float4 Pos : SV_Position;
	float4 Uv : TEXCOORD;
	float4 Color : COLOR;

	float4 ViewPos : POSITION;
	float4 ViewNormal : NORMAL;
};


cbuffer WTRANSDATA : register(b0)
{
	matrix POS;
	matrix SCALE;
	matrix ROT;
	matrix REVOL;
	matrix PARENT;
	matrix LWORLD;
	matrix WWORLD;
	matrix VIEW;
	matrix PROJ;
	matrix WV;
	matrix VP;
	matrix WVP;
}


VTX2DIMGOUT VS_2DUI(VTX2DIMGIN _In)
{

	_In.Pos.w = 1.0F;
	_In.Normal.w = 0.0f;
	_In.Normal.y = -_In.Normal.y;

	VTX2DIMGOUT Out = (VTX2DIMGOUT)0;
	Out.Pos = mul(_In.Pos, WVP);
	Out.Uv = _In.Uv;
	Out.Color = _In.Color;

	_In.Pos.w = 1.0f;
	Out.ViewPos = mul(_In.Pos, WV);

	Out.ViewNormal = normalize(mul(_In.Normal, WV));
	_In.Normal.w = 0.0f;

	return Out;
}


struct DEFFERDOUT
{
	float4 DifColor : SV_Target0;
	float4 PosColor : SV_Target1;
	float4 NorColor : SV_Target2;
	float4 DepColor : SV_Target3;
};

Texture2D Tex : register(t0);
SamplerState Smp : register(s0);
DEFFERDOUT PS_2DUI(VTX2DIMGOUT _In) : SV_Target0
{

	DEFFERDOUT Out = (DEFFERDOUT)0;

	Out.DifColor = Tex.Sample(Smp, _In.Uv.xy);

	Out.PosColor.x = 0.5f;
	Out.PosColor.y = 0.5f;
	Out.PosColor.z = 0.5f;

	Out.NorColor.x = 0.5f;
	Out.NorColor.y = 0.5f;
	Out.NorColor.z = 0.5f; 
	
	Out.DepColor.x = 0.5f;
	Out.DepColor.y = 0.5f;
	Out.DepColor.z = 0.5f;


	return Out;
}